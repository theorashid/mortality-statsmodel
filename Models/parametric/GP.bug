
model{
# Theo AO Rashid -- October 2020

# ----- GP model -----
# Negative binomial likelihood
#
# Global terms (normal prior) +
# Gaussian process over space +
# Age effects (random walk prior) +
# Age-space interaction (normal prior) +
# Global random walk
#
# Requires MaternKernel as a nimbleFunction

# PRIORS

# AREA TERMS
# GP for intercepts
mu_alpha[1:N_space] <- mu0_alpha*ones[1:N_space]
cov_alpha[1:N_space, 1:N_space] <- maternKernel(dists[1:N_space, 1:N_space], l_alpha, sigma_alpha)
alpha_space[1:N_space] ~ dmnorm(mu_alpha[1:N_space], cov = cov_alpha[1:N_space, 1:N_space])
mu0_alpha   ~ dnorm(0, sd = 100)
sigma_alpha ~ dunif(0, 2)
l_alpha     ~ dunif(0, 5)

# GP for slopes
mu_beta[1:N_space] <- mu0_beta*ones[1:N_space]
cov_beta[1:N_space, 1:N_space] <- maternKernel(dists[1:N_space, 1:N_space], l_beta, sigma_beta)
beta_space[1:N_space] ~ dmnorm(mu_beta[1:N_space], cov = cov_beta[1:N_space, 1:N_space])
mu0_beta   ~ dnorm(0, sd = 100)
sigma_beta ~ dunif(0, 2)
l_beta     ~ dunif(0, 5)
# AGE TERMS
alpha_age[1] <- 0 # initialise first terms for RW
beta_age[1]  <- 0
for(a in 2:N_age_groups){
  alpha_age[a] ~ dnorm(alpha_age[a-1], sd = sigma_alpha_age) # RW based on previous age group
  beta_age[a]  ~ dnorm(beta_age[a-1], sd = sigma_beta_age)
}
sigma_alpha_age ~ dunif(0,2)
sigma_beta_age ~ dunif(0,2)

# INTERACTIONS
# age-space interactions
for(a in 1:N_age_groups) {
  for(s in 1:N_space) {
    xi[a, s] ~ dnorm(alpha_age[a] + alpha_space[s], sd = sigma_xi) # centred on age + space term
  }
}
sigma_xi ~ dunif(0,2)

# space slope (as no space-time random walk)
for(s in 1:N_space){
  space_slope[s, 1] <- 0
  for(t in 2:N_year) {
    space_slope[s, t] <- space_slope[s, t-1] + beta_space[s]
  }
}

# age slope (as no age-time random walk)
for(a in 1:N_age_groups){
  age_slope[a, 1] <- 0
  for(t in 2:N_year) {
    age_slope[a, t] <- age_slope[a, t-1] + beta_age[a]
  }
}

# global random walk for non-linear time
pi[1] <- 0
for (t in 2:N_year) {
  pi[t] ~ dnorm(pi[t-1], sd = sigma_pi)
}
sigma_pi ~ dunif(0, 2)

# Put all parameters together into indexed lograte
for(a in 1:N_age_groups) {
  for(s in 1:N_space) {
    for(t in 1:N_year) {
      lograte[a, s, t] <- xi[a, s] + space_slope[s, t] + age_slope[a, t] + pi[t]
    }
  }
}

# LIKELIHOOD
# N total number of cells, i.e. ages*years*areas(*sex)
for (i in 1:N) {
  # y is number of deaths in that cell
  # mu is predicted number of deaths in that cell
  y[i] ~ dnegbin(p[i], r)
  p[i] <- r/(r + mu[i])
  log(mu[i]) <- log(n[i]) + lograte[age[i], space[i], yr[i]]
}
r ~ dunif(0,50)
}

