
model{
# Theo AO Rashid -- October 2020

# ----- Nested model -----
# Three tier nested hierarchy
# Negative binomial likelihood
#
# Global terms (normal prior) +
# Random effects for tier 1 (normal prior) +
# Random effects for tier 2 (normal prior, hierarchy) +
# Random effects for tier 3 (smallest) (normal prior, hierarchy) +
# Age effects (random walk prior) +
# Age-space interaction (normal prior) +
# Age random walk
#
# Designed for the ONS hierarchy LSOA -> MSOA -> LAD / MSOA -> LAD -> Region (3 -> 2 -> 1)
# --------------------

# PRIORS

# COMMON TERMS
alpha0 ~ dnorm(0, 0.00001)
beta0  ~ dnorm(0, 0.00001)

# AREA TERMS -- random effects for intercepts and slopes
# Lower level term centred on higher level

# tier 1 terms
for(s1 in 1:N_s1){
  alpha_s1[s1] ~ dnorm(0, sd = sigma_alpha_s1) # centred on common terms
  beta_s1[s1] ~ dnorm(0, sd = sigma_beta_s1)
}
sigma_alpha_s1 ~ dunif(0,2)
sigma_beta_s1  ~ dunif(0,2)

# tier 2 terms
for(s2 in 1:N_s2){
  alpha_s2[s2] ~ dnorm(alpha_s1[grid.lookup.s2[s2, 2]], sd = sigma_alpha_s2) # centred on s1 terms
  beta_s2[s2] ~ dnorm(beta_s1[grid.lookup.s2[s2, 2]], sd = sigma_beta_s2)
}
sigma_alpha_s2 ~ dunif(0,2)
sigma_beta_s2  ~ dunif(0,2)

# tier 3 terms
for(s in 1:N_space){ # s = s3, N_space = N_s3
  alpha_s3[s] ~ dnorm(alpha_s2[grid.lookup[s, 2]], sd = sigma_alpha_s3) # centred on s2 terms
  beta_s3[s]  ~ dnorm(beta_s2[grid.lookup[s, 2]], sd = sigma_beta_s3)
}
sigma_alpha_s3 ~ dunif(0,2)
sigma_beta_s3  ~ dunif(0,2)

# AGE TERMS
alpha_age[1] <- alpha0 # initialise first terms for RW
beta_age[1]  <- beta0
for(a in 2:N_age_groups){
  alpha_age[a] ~ dnorm(alpha_age[a-1], sd = sigma_alpha_age) # RW based on previous age group
  beta_age[a]  ~ dnorm(beta_age[a-1], sd = sigma_beta_age)
}
sigma_alpha_age ~ dunif(0,2)
sigma_beta_age ~ dunif(0,2)

# INTERACTIONS
# age-space interactions
for(a in 1:N_age_groups) {
  for(s in 1:N_space) {
    xi[a, s] ~ dnorm(alpha_age[a] + alpha_s3[s], sd = sigma_xi) # centred on age + space term
  }
}
sigma_xi ~ dunif(0,2)

# space slope (as no space-time random walk)
for(s in 1:N_space){
  space_slope[s, 1] <- 0
  for(t in 2:N_year) {
    space_slope[s, t] <- space_slope[s, t-1] + beta_s3[s]
  }
}

# age-time random walk
for(a in 1:N_age_groups){
  gamma[a, 1] <- 0
  for(t in 2:N_year) {
    gamma[a, t] ~ dnorm(gamma[a, t-1] + beta_age[a], sd = sigma_gamma)
  }
}
sigma_gamma ~ dunif(0,2)

# Put all parameters together into indexed lograte term
for(a in 1:N_age_groups) {
  for(s in 1:N_space) {
    for(t in 1:N_year) {
      lograte[a, s, t] <- xi[a, s] + space_slope[s, t] + gamma[a, t]
    }
  }
}

# LIKELIHOOD
# N total number of cells, i.e. ages*years*areas(*sex)
for (i in 1:N) {
  # y is number of deaths in that cell
  # mu is predicted number of deaths in that cell
  y[i] ~ dnegbin(p[i], r)
  p[i] <- r/(r + mu[i])
  log(mu[i]) <- log(n[i]) + lograte[age[i], space[i], yr[i]]
}
r ~ dunif(0,50)
}

